const { ApplicationCommandOptionType, EmbedBuilder,PermissionsBitField } = require("discord.js");
const ertucuk = require("../../../../../../Global/Settings/System");
const kanal = require("../../../../../../Global/Settings/AyarName");

module.exports = {
    name: "cihaz",
    description: "Kullanƒ±cƒ±n hangi cihazda olduƒüunu g√∂sterir.",
    category: "USER",
    cooldown: 0,
    command: {
      enabled: true,
      aliases: ["cihazlar"],
      usage: ".cihazlar", 
    },
    slashCommand: {
      enabled: true,
      options: [
        {
            name: "ertu",
            description: "ertu",
            type: ApplicationCommandOptionType.Subcommand,
        },
      ],
    },

    onLoad: function (client) { },

    onCommand: async function (client, message, args, embed) {

      let kanallar = kanal.KomutKullanƒ±mKanalƒ∞sim;
     if (!message.member.permissions.has(PermissionsBitField.Flags.Administrator) && !kanallar.includes(message.channel.name)) return message.reply({ content: `${kanallar.map(x => `${client.channels.cache.find(chan => chan.name == x)}`)} kanallarƒ±nda kullanabilirsiniz.`}).then((e) => setTimeout(() => { e.delete(); }, 10000)); 

        let user = message.mentions.members.first() || message.guild.members.cache.get(args[0]) || message.member;
        if(!user) return message.reply({ embeds: [ new EmbedBuilder().setFooter({text: ertucuk.SubTitle}).setDescription(`**Ge√ßerli Bir User Belirt!**`)] })
        if (user.presence == null) return message.reply({ embeds: [ new EmbedBuilder().setFooter({text: ertucuk.SubTitle}).setDescription(`**Belirtilen User Ofline Durumda Olduƒüu ƒ∞√ßin Kontrol Edilemiyor!**`)] })
        let dev = Object.keys(user.presence.clientStatus)
        let t√ºr = {desktop: "(üíª) Bilgisayar / Uygulama",mobile: "(üì±) Mobil / Uygulama",web: "(üåê) Web Tarayƒ±cƒ± / ƒ∞nternet"}
        let t√ºr2 = {online: "(üü¢) √áevrimi√ßi",dnd: "(üî¥) Rahatsƒ±z Etme",idle: "(üü°) Bo≈üta",offline:"(‚ö™) √áevrimdƒ±≈üƒ±"}
        message.reply({ embeds: [ new EmbedBuilder().setFooter({text: ertucuk.SubTitle}).setDescription(`**${user} Kullanƒ±cƒ±sƒ±nƒ±n Aktif Cihazlarƒ±!**\n**Durum; \`${t√ºr2[user.presence.status]}\`**\n**Cihazlar; ${dev.map(x => `\`${t√ºr[x]}\``).join("\n")}**`).setThumbnail(user.user.avatarURL({dynamic:true}))] });
     },

    onSlash: async function (client, interaction) { },
  };